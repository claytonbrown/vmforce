<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.0.xsd">

    <!-- Force.com OAuth security config -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="oauthAuthenticationProvider"/>
    </security:authentication-manager>
        
    <bean id="oauthAuthenticationProvider" class="com.salesforce.security.oauth.spring.OAuthAuthenticationProvider">
        <property name="oauthConnector" ref="oauthConnector" />
    </bean>
    
    <bean id="oauthConnector" class="com.salesforce.security.oauth.OAuthConnector">
        <property name="apiVersion" value = "${force.apiVersion}" />
        <property name="endPoint" value="${force.endPoint}" />
        <property name="consumerKey" value="${force.consumerKey}" />
        <property name="consumerSecret" value="${force.consumerSecret}" />
    </bean>
    <!--  This filter redirects the user to the OAuth login page -->
    <bean id="authenticationProcessingFilterEntryPoint" class="com.salesforce.security.oauth.spring.AuthenticationProcessingFilterEntryPoint">
        <property name="oauthConnector" ref="oauthConnector" />
    </bean>
    <!-- This filter is invoked after OAuth login to exchange token for an access token -->
    <bean id="authenticationFilter" class="com.salesforce.security.oauth.spring.AuthenticationProcessingFilter">
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="authenticationSuccessHandler">
            <bean class="com.salesforce.security.oauth.spring.AuthenticationSuccessHandler">
			    <property name="defaultTargetUrl" value="/" />
	        </bean>
	    </property>
	    <property name="oauthConnector" ref="oauthConnector" />
	    <property name="filterProcessesUrl" value="/login" />
	    <property name="authenticationEntryPoint" ref="authenticationProcessingFilterEntryPoint" />
    </bean>
    
    <!-- This filter is invoked during logout -->
    <!-- sets this as the authentication filter over the default -->
    <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg index="0">
            <bean class="com.salesforce.security.oauth.spring.LogoutSuccessHandler">
                <property name="defaultTargetUrl" value="/logout_success.html" />
                <property name="logoutFromSfdc" value="true" />
                <property name="oauthConnector" ref="oauthConnector" />
            </bean>
        </constructor-arg>
        <constructor-arg index="1">
            <list>
                <bean class="com.salesforce.security.oauth.spring.LogoutHandler"/>
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
            </list>
        </constructor-arg>
        <property name="filterProcessesUrl" value="/logout" />
    </bean>
       
	<!-- Configure Spring Security -->
	<security:http entry-point-ref="authenticationProcessingFilterEntryPoint" >
	    <security:anonymous />
	    <!-- sets this as the authentication filter over the default -->
	    <security:custom-filter position="FORM_LOGIN_FILTER" ref="authenticationFilter"/>
	    <security:custom-filter position="LOGOUT_FILTER" ref="logoutFilter"/>
	</security:http>

</beans>
